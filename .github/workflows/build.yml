# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build

on:
  push:
    branches: [ main ]

permissions : write-all
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Set up JDK 24
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean build jacocoTestReport
      - name: Send report to codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Build the tagged Docker image
        run: docker build . --tag ghcr.io/fialhorenato/springbootstrap:latest --tag ghcr.io/fialhorenato/springbootstrap:${{ github.sha }} --tag registry.fly.io/springbootstrap:${{ github.sha }}
      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ghcr.io/fialhorenato/springbootstrap:latest
          args: --file=Dockerfile
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: snyk.sarif
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to Docker Github
        run: docker push ghcr.io/fialhorenato/springbootstrap --all-tags
      - name: Delete old package versions
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'springbootstrap'
          package-type: 'container'
          min-versions-to-keep: 10
          token: ${{ secrets.GITHUB_TOKEN }}
